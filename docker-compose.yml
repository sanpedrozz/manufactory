services:
  api-gateway:
    restart: always
    build: ./api-gateway
    ports:
      - "8000:80"
    depends_on:
      alarms_service:
        condition: service_healthy
      item_checker_service:
        condition: service_healthy

    #      - plc_data_service
    networks:
      - app-network

  alarms_service:
    restart: always
    build:
      context: .
      dockerfile: services/alarm/Dockerfile
      args:
        BASE_PATH: services/alarm
    environment:
      - UVICORN_PORT=8000
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 10s
      timeout: 5s
      retries: 3


  #  plc_data_service:
#    restart: always
#    build:
#      context: .
#      dockerfile: services/plc_data_hub/Dockerfile
#    volumes:
#      - ./shared:/app/shared
#    networks:
#      - app-network

  item_checker_service:
    restart: always
    build:
      context: .
      dockerfile: services/item_checker/Dockerfile
      args:
        BASE_PATH: services/item_checker
    environment:
      - UVICORN_PORT=8000
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 10s
      timeout: 5s
      retries: 3


  api_service:
    restart: always
    build: .
    ports:
      - "7000:7000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
